% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/viterbi.R
\name{viterbi}
\alias{viterbi}
\title{Viterbi algorithm}
\usage{
viterbi(data, nbStates, beta, delta, stepDist = c("gamma", "weibull", "exp"),
  angleDist = c("NULL", "vm", "wrpcauchy"), stepPar, anglePar = NULL,
  angleMean = NULL, zeroInflation = FALSE)
}
\arguments{
\item{data}{An object moveData.}

\item{nbStates}{Number of states of the HMM.}

\item{beta}{Matrix of regression coefficients for the transition probability matrix.}

\item{delta}{Stationary distribution.}

\item{stepDist}{Name of the distribution of the step length values.}

\item{angleDist}{Name of the distribution of the turning angle values. Defaults to "NULL"
if the turning angles distributions is not estimated.}

\item{stepPar}{Vector of state-dependent step length distribution parameters.}

\item{anglePar}{Vector of state-dependent turning angle distribution parameters.}

\item{angleMean}{Vector of means of turning angles if not estimated (one for each state).
Defaults to NULL.}

\item{zeroInflation}{TRUE if the step length distribution is inflated in zero.}
}
\value{
The sequence of most probable states.
}
\description{
Reconstructs the most probable states sequence.
}
\examples{
# simulate data
nbAnimals <- 5
nbStates <- 2
nbCovs <- 3
mu<-c(15,50)
sigma<-c(10,20)
angleMean <- c(pi,0)
kappa <- c(0.7,1.5)
stepPar <- c(mu,sigma)
anglePar <- c(angleMean,kappa)
stepDist <- "gamma"
angleDist <- "vm"
zeroInflation <- FALSE
data <- simData(nbAnimals,nbStates,stepDist,angleDist,stepPar,anglePar,nbCovs,zeroInflation)

# estimation
mu0 <- c(20,70)
sigma0 <- c(10,30)
kappa0 <- c(1,1)
stepPar0 <- c(mu0,sigma0)
anglePar0 <- kappa0
formula <- ~cov1+cos(cov2)+sin(cov3)
nbCovs <- length(attr(terms(formula), "term.labels"))

beta0 <- matrix(c(rep(-1.5,nbStates*(nbStates-1)),rep(0,nbStates*(nbStates-1)*nbCovs)),
                nrow=nbCovs+1,byrow=TRUE)
delta0 <- rep(1,nbStates)/nbStates

mod <- fitHMM(nbStates,data,stepPar0,anglePar0,beta0,delta0,formula,
              "gamma","vm",angleMean,zeroInflation)

# reconstruction of states sequence
vit <- viterbi(data,nbStates,mod$beta,mod$delta,stepDist,angleDist,mod$stepPar,mod$anglePar,
               angleMean)
}

