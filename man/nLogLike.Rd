% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/nLogLike.R
\name{nLogLike}
\alias{nLogLike}
\title{Negative log-likelihood function}
\usage{
nLogLike(wpar, nbStates, bounds, parSize, data, stepDist = c("gamma",
  "weibull", "exp"), angleDist = c(NULL, "vm", "wrpcauchy"),
  angleMean = NULL)
}
\arguments{
\item{wpar}{Vector of working parameters.}

\item{nbStates}{Number of states of the HMM.}

\item{bounds}{Matrix with 2 columns and as many rows as there are elements in wpar. Each row
contains the lower and upper bound for the correponding parameter.}

\item{parSize}{Vector of two values : c(number of parameters of the step length distribution,
number of parameters of the turning angle distribution).}

\item{data}{An object moveData.}

\item{stepDist}{Name of the distribution of the step length values.}

\item{angleDist}{Name of the distribution of the turning angle values. Defaults to NULL
if the turning angles distributions is not estimated.}

\item{angleMean}{Vector of means of turning angles if not estimated (one for each state).
Defaults to NULL.}
}
\value{
The negative log-likelihood of wpar given data.
}
\description{
Negative log-likelihood function
}
\examples{
nbStates <- 2
stepPar <- matrix(c(15,50,80,
                    10,20,30),
                  byrow=T,ncol=3)
anglePar <- matrix(c(pi,0,pi/3,
                     0.7,2,1),
                   byrow=T,ncol=3)
data <- simData(2,3,"gamma","vm",stepPar,anglePar,nbCov=2)

mu0 <- c(20,80)
sigma0 <- c(20,40)
kappa0 <- c(1,1)
bounds <- matrix(c(0,Inf,
                   0,Inf,
                   0,Inf,
                   0,Inf,
                   0,Inf,
                   0,Inf),
                 ncol=2,byrow=T)
nbCovs <- ncol(data[[1]]$covs)
beta0 <- matrix(c(rep(-1.5,nbStates*(nbStates-1)),rep(0,nbStates*(nbStates-1)*nbCovs)),
                nrow=nbCovs+1,byrow=T)
delta0 <- c(1,1)/2
par0 <- c(mu0,sigma0,kappa0)
wpar <- n2w(par0,bounds,beta0,delta0,nbStates)
parSize <- c(2,1)
angleMean <- c(pi,0)
stepDist <- "gamma"
angleDist <- "vm"

l <- nLogLike(nbStates,wpar,bounds,parSize,data,stepDist,angleDist,angleMean)
}

