% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/fitHMM.R
\name{fitHMM}
\alias{fitHMM}
\title{Fit an HMM to the data}
\usage{
fitHMM(nbStates, data, stepPar0, anglePar0, beta0 = NULL, delta0 = NULL,
  formula = ~1, stepDist = c("gamma", "weibull", "lnorm", "exp"),
  angleDist = c("NULL", "vm", "wrpcauchy"), angleMean = NULL,
  zeroInflation = FALSE, verbose = 0)
}
\arguments{
\item{nbStates}{Number of states of the HMM.}

\item{data}{An object moveData.}

\item{stepPar0}{Vector of initial state-dependent step length distribution parameters.}

\item{anglePar0}{Vector of initial state-dependent turning angle distribution parameters.}

\item{beta0}{Initial matrix of regression coefficients for the transition probability matrix.}

\item{delta0}{Initial stationary distribution.}

\item{formula}{Regression formula for the covariates. Default : ~1 (no covariate).}

\item{stepDist}{Name of the distribution from which to draw the step length values.
Supported distributions are : gamma, weibull, lnorm, exp.}

\item{angleDist}{Name of the distribution from which to draw the turning angle values.
Supported distributions are : vm, wrpcauchy.}

\item{angleMean}{Vector of state-dependent turning angles means. It defaults to NULL,
i.e. the means should be estimated.}

\item{zeroInflation}{TRUE if the step length distribution is inflated in zero.}

\item{verbose}{Determines the print level of the optimizer. The default value of 0 means that no
printing occurs, a value of 1 means that the first and last iterations of the optimization are
detailed, and a value of 2 means that each iteration of the optimization is detailed.}
}
\value{
The MLE of the parameters of the model.
}
\description{
Fit an HMM to the data
}
\examples{
### 1. simulate data
# define all the arguments of simData
nbAnimals <- 2
nbStates <- 2
nbCovs <- 2
mu<-c(15,50)
sigma<-c(10,20)
angleMean <- c(pi,0)
kappa <- c(0.7,1.5)
stepPar <- c(mu,sigma)
anglePar <- c(angleMean,kappa)
stepDist <- "gamma"
angleDist <- "vm"
zeroInflation <- FALSE
obsPerAnimal <- c(50,100)

data <- simData(nbAnimals,nbStates,stepDist,angleDist,stepPar,anglePar,NULL,nbCovs,zeroInflation,
                obsPerAnimal)

### 2. fit the model to the simulated data
# define initial values for the parameters
mu0 <- c(20,70)
sigma0 <- c(10,30)
kappa0 <- c(1,1)
stepPar0 <- c(mu0,sigma0)
anglePar0 <- kappa0
formula <- ~cov1+cos(cov2)

mod <- fitHMM(nbStates,data,stepPar0,anglePar0,NULL,NULL,formula,
              "gamma","vm",angleMean,zeroInflation,verbose=2)
}

