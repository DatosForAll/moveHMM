% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/fitHMM.R
\name{fitHMM}
\alias{fitHMM}
\title{Fit an HMM to the data}
\usage{
fitHMM(nbStates, data, stepPar0, anglePar0, beta0, delta0, formula = ~1,
  stepDist = c("gamma", "weibull", "exp"), angleDist = c("NULL", "vm",
  "wrpcauchy"), angleMean = NULL, zeroInflation = FALSE)
}
\arguments{
\item{nbStates}{Number of states of the HMM.}

\item{data}{An object moveData.}

\item{stepPar0}{Vector of initial state-dependent step length distribution parameters.}

\item{anglePar0}{Vector of initial state-dependent turning angle distribution parameters.}

\item{beta0}{Initial matrix of regression coefficients for the transition probability matrix.}

\item{delta0}{Initial stationary distribution.}

\item{formula}{Regression formula for the covariates. Default : ~1 (no covariate).}

\item{stepDist}{Name of the distribution of the step length values.}

\item{angleDist}{Name of the distribution of the turning angle values. Defaults to "NULL"
if the turning angles distributions is not estimated.}

\item{angleMean}{Vector of state-dependent turning angles means. It defaults to NULL,
i.e. the means should be estimated.}

\item{zeroInflation}{TRUE if the step length distribution is inflated in zero.}
}
\value{
The MLE of the parameters of the model.
}
\description{
Fit an HMM to the data
}
\examples{
# simulate data
nbAnimals <- 5
nbStates <- 2
nbCovs <- 3
mu<-c(15,50)
sigma<-c(10,20)
angleMean <- c(pi,0)
kappa <- c(0.7,1.5)
stepPar <- c(mu,sigma)
anglePar <- c(angleMean,kappa)
stepDist <- "gamma"
angleDist <- "vm"
zeroInflation <- FALSE

data <- simData(nbAnimals,nbStates,stepDist,angleDist,stepPar,anglePar,nbCovs,zeroInflation)

# estimation
mu0 <- c(20,70)
sigma0 <- c(10,30)
kappa0 <- c(1,1)
angleMean <- c(pi,0)
stepPar0 <- c(mu0,sigma0)
anglePar0 <- kappa0
formula <- ~cov1+cos(cov2)+sin(cov3)
nbCovs <- length(attr(terms(formula), "term.labels"))

beta0 <- matrix(c(rep(-1.5,nbStates*(nbStates-1)),rep(0,nbStates*(nbStates-1)*nbCovs)),
                nrow=nbCovs+1,byrow=TRUE)
delta0 <- rep(1,nbStates)/nbStates

mod <- fitHMM(nbStates,data,stepPar0,anglePar0,beta0,delta0,formula,
              "gamma","vm",angleMean,zeroInflation)
}

